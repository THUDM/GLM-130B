WARNING:torch.distributed.run:
*****************************************
Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
*****************************************
WARNING: No training data specified
using world size: 8 and model-parallel size: 8 
> padded vocab (size: 150528) with 0 dummy tokens (new size: 150528)
WARNING: No training data specified
WARNING: No training data specified
WARNING: No training data specified
WARNING: No training data specified
WARNING: No training data specified
WARNING: No training data specified
WARNING: No training data specified
> initializing model parallel with size 8
> Loading task configs
    Task ETHOS_oneshot loaded from config tasks/ethnic/ETHOS_oneshot.yaml
> Successfully load 1 task
> Set tokenizer as a icetk-glm-130B tokenizer! Now you can get_tokenizer() everywhere.
global rank 6 is loading checkpoint /mnt/yrfs/aohan/checkpoints/glm-130b-sat/49300/mp_rank_06_model_states.ptglobal rank 0 is loading checkpoint /mnt/yrfs/aohan/checkpoints/glm-130b-sat/49300/mp_rank_00_model_states.pt

global rank 2 is loading checkpoint /mnt/yrfs/aohan/checkpoints/glm-130b-sat/49300/mp_rank_02_model_states.ptglobal rank 7 is loading checkpoint /mnt/yrfs/aohan/checkpoints/glm-130b-sat/49300/mp_rank_07_model_states.ptglobal rank 3 is loading checkpoint /mnt/yrfs/aohan/checkpoints/glm-130b-sat/49300/mp_rank_03_model_states.pt

global rank 5 is loading checkpoint /mnt/yrfs/aohan/checkpoints/glm-130b-sat/49300/mp_rank_05_model_states.pt

global rank 4 is loading checkpoint /mnt/yrfs/aohan/checkpoints/glm-130b-sat/49300/mp_rank_04_model_states.pt
global rank 1 is loading checkpoint /mnt/yrfs/aohan/checkpoints/glm-130b-sat/49300/mp_rank_01_model_states.pt
  successfully loaded /mnt/yrfs/aohan/checkpoints/glm-130b-sat/49300/mp_rank_01_model_states.pt
  successfully loaded /mnt/yrfs/aohan/checkpoints/glm-130b-sat/49300/mp_rank_04_model_states.pt
  successfully loaded /mnt/yrfs/aohan/checkpoints/glm-130b-sat/49300/mp_rank_05_model_states.pt
  successfully loaded /mnt/yrfs/aohan/checkpoints/glm-130b-sat/49300/mp_rank_02_model_states.pt
  successfully loaded /mnt/yrfs/aohan/checkpoints/glm-130b-sat/49300/mp_rank_06_model_states.pt
  successfully loaded /mnt/yrfs/aohan/checkpoints/glm-130b-sat/49300/mp_rank_07_model_states.pt
  successfully loaded /mnt/yrfs/aohan/checkpoints/glm-130b-sat/49300/mp_rank_03_model_states.pt
  successfully loaded /mnt/yrfs/aohan/checkpoints/glm-130b-sat/49300/mp_rank_00_model_states.pt
> Checkpoint loaded in 24.5s


MultiChoiceTaskConfig(name='ETHOS_oneshot', type=<TaskType.MULTICHOICE: 'mul'>, path='data/ETHOS/oneshot', module=None, metrics=['Accuracy', 'Precision', 'Recall', 'F1_mul'], use_task_mask=False, use_multitask_encoding=False, unidirectional=False, max_seq_length=2048, file_pattern={'test': '**/oneshot_200.jsonl'}, micro_batch_size=128)
Evaluating task ETHOS_oneshot:
    Evaluating group test:
Traceback (most recent call last):
  File "/mnt/yrfs/xuyifan/GLM-130B/evaluate.py", line 67, in <module>
    main()
  File "/mnt/yrfs/xuyifan/GLM-130B/evaluate.py", line 62, in main
    evaluate_all_tasks(args.data_path, model, tokenizer, args.task, task_classes)
  File "/mnt/yrfs/xuyifan/GLM-130B/evaluate.py", line 36, in evaluate_all_tasks
Traceback (most recent call last):
  File "/mnt/yrfs/xuyifan/GLM-130B/evaluate.py", line 67, in <module>
Traceback (most recent call last):
  File "/mnt/yrfs/xuyifan/GLM-130B/evaluate.py", line 67, in <module>
    task.evaluate()
  File "/mnt/yrfs/xuyifan/GLM-130B/evaluation/tasks.py", line 86, in evaluate
    main()
  File "/mnt/yrfs/xuyifan/GLM-130B/evaluate.py", line 62, in main
    prediction.append(self.predict_single_batch(batch))
  File "/mnt/yrfs/xuyifan/GLM-130B/evaluation/tasks.py", line 206, in predict_single_batch
    evaluate_all_tasks(args.data_path, model, tokenizer, args.task, task_classes)
  File "/mnt/yrfs/xuyifan/GLM-130B/evaluate.py", line 36, in evaluate_all_tasks
    main()
  File "/mnt/yrfs/xuyifan/GLM-130B/evaluate.py", line 62, in main
    task.evaluate()
  File "/mnt/yrfs/xuyifan/GLM-130B/evaluation/tasks.py", line 86, in evaluate
    evaluate_all_tasks(args.data_path, model, tokenizer, args.task, task_classes)
  File "/mnt/yrfs/xuyifan/GLM-130B/evaluate.py", line 36, in evaluate_all_tasks
    log_probs = self.model.cond_log_prob(batch)
  File "/mnt/yrfs/xuyifan/GLM-130B/evaluation/model.py", line 33, in cond_log_prob
    prediction.append(self.predict_single_batch(batch))
  File "/mnt/yrfs/xuyifan/GLM-130B/evaluation/tasks.py", line 206, in predict_single_batch
    logits, *output_per_layers = self.model(tokens, position_ids, attention_mask, log_attention_weights=None)    
task.evaluate()
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
  File "/mnt/yrfs/xuyifan/GLM-130B/evaluation/tasks.py", line 86, in evaluate
    log_probs = self.model.cond_log_prob(batch)
  File "/mnt/yrfs/xuyifan/GLM-130B/evaluation/model.py", line 33, in cond_log_prob
Traceback (most recent call last):
  File "/mnt/yrfs/xuyifan/GLM-130B/evaluate.py", line 67, in <module>
    prediction.append(self.predict_single_batch(batch))
  File "/mnt/yrfs/xuyifan/GLM-130B/evaluation/tasks.py", line 206, in predict_single_batch
    logits, *output_per_layers = self.model(tokens, position_ids, attention_mask, log_attention_weights=None)
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    main()
  File "/mnt/yrfs/xuyifan/GLM-130B/evaluate.py", line 62, in main
    log_probs = self.model.cond_log_prob(batch)
  File "/mnt/yrfs/xuyifan/GLM-130B/evaluation/model.py", line 33, in cond_log_prob
    logits, *output_per_layers = self.model(tokens, position_ids, attention_mask, log_attention_weights=None)
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    evaluate_all_tasks(args.data_path, model, tokenizer, args.task, task_classes)
  File "/mnt/yrfs/xuyifan/GLM-130B/evaluate.py", line 36, in evaluate_all_tasks
Traceback (most recent call last):
  File "/mnt/yrfs/xuyifan/GLM-130B/evaluate.py", line 67, in <module>
    return forward_call(*input, **kwargs)
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/SwissArmyTransformer/model/base_model.py", line 114, in forward
        return forward_call(*input, **kwargs)task.evaluate()

  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/SwissArmyTransformer/model/base_model.py", line 114, in forward
  File "/mnt/yrfs/xuyifan/GLM-130B/evaluation/tasks.py", line 86, in evaluate
    return forward_call(*input, **kwargs)
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/SwissArmyTransformer/model/base_model.py", line 114, in forward
    main()
  File "/mnt/yrfs/xuyifan/GLM-130B/evaluate.py", line 62, in main
    prediction.append(self.predict_single_batch(batch))
  File "/mnt/yrfs/xuyifan/GLM-130B/evaluation/tasks.py", line 206, in predict_single_batch
    evaluate_all_tasks(args.data_path, model, tokenizer, args.task, task_classes)
  File "/mnt/yrfs/xuyifan/GLM-130B/evaluate.py", line 36, in evaluate_all_tasks
        return self.transformer(*args, **kwargs)return self.transformer(*args, **kwargs)

  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return self.transformer(*args, **kwargs)
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    log_probs = self.model.cond_log_prob(batch)
  File "/mnt/yrfs/xuyifan/GLM-130B/evaluation/model.py", line 33, in cond_log_prob
    task.evaluate()
  File "/mnt/yrfs/xuyifan/GLM-130B/evaluation/tasks.py", line 86, in evaluate
Traceback (most recent call last):
  File "/mnt/yrfs/xuyifan/GLM-130B/evaluate.py", line 67, in <module>
    logits, *output_per_layers = self.model(tokens, position_ids, attention_mask, log_attention_weights=None)
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    prediction.append(self.predict_single_batch(batch))
  File "/mnt/yrfs/xuyifan/GLM-130B/evaluation/tasks.py", line 206, in predict_single_batch
    return forward_call(*input, **kwargs)
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/SwissArmyTransformer/model/transformer.py", line 582, in forward
    return forward_call(*input, **kwargs)
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/SwissArmyTransformer/model/transformer.py", line 582, in forward
    return forward_call(*input, **kwargs)
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/SwissArmyTransformer/model/transformer.py", line 582, in forward
    main()
  File "/mnt/yrfs/xuyifan/GLM-130B/evaluate.py", line 62, in main
    log_probs = self.model.cond_log_prob(batch)
  File "/mnt/yrfs/xuyifan/GLM-130B/evaluation/model.py", line 33, in cond_log_prob
    return forward_call(*input, **kwargs)
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/SwissArmyTransformer/model/base_model.py", line 114, in forward
    evaluate_all_tasks(args.data_path, model, tokenizer, args.task, task_classes)
  File "/mnt/yrfs/xuyifan/GLM-130B/evaluate.py", line 36, in evaluate_all_tasks
    logits, *output_per_layers = self.model(tokens, position_ids, attention_mask, log_attention_weights=None)
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
        logits_parallel = gather_from_model_parallel_region(logits_parallel)logits_parallel = gather_from_model_parallel_region(logits_parallel)

  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/SwissArmyTransformer/mpu/mappings.py", line 141, in gather_from_model_parallel_region
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/SwissArmyTransformer/mpu/mappings.py", line 141, in gather_from_model_parallel_region
    task.evaluate()
  File "/mnt/yrfs/xuyifan/GLM-130B/evaluation/tasks.py", line 86, in evaluate
    return self.transformer(*args, **kwargs)
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
Traceback (most recent call last):
  File "/mnt/yrfs/xuyifan/GLM-130B/evaluate.py", line 67, in <module>
    logits_parallel = gather_from_model_parallel_region(logits_parallel)
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/SwissArmyTransformer/mpu/mappings.py", line 141, in gather_from_model_parallel_region
    return forward_call(*input, **kwargs)
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/SwissArmyTransformer/model/base_model.py", line 114, in forward
    prediction.append(self.predict_single_batch(batch))
  File "/mnt/yrfs/xuyifan/GLM-130B/evaluation/tasks.py", line 206, in predict_single_batch
    main()
  File "/mnt/yrfs/xuyifan/GLM-130B/evaluate.py", line 62, in main
    return _GatherFromModelParallelRegion.apply(input_)
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/SwissArmyTransformer/mpu/mappings.py", line 120, in forward
    return _GatherFromModelParallelRegion.apply(input_)
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/SwissArmyTransformer/mpu/mappings.py", line 120, in forward
    return _GatherFromModelParallelRegion.apply(input_)
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/SwissArmyTransformer/mpu/mappings.py", line 120, in forward
    return self.transformer(*args, **kwargs)
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/SwissArmyTransformer/model/transformer.py", line 582, in forward
    log_probs = self.model.cond_log_prob(batch)
  File "/mnt/yrfs/xuyifan/GLM-130B/evaluation/model.py", line 33, in cond_log_prob
    evaluate_all_tasks(args.data_path, model, tokenizer, args.task, task_classes)
  File "/mnt/yrfs/xuyifan/GLM-130B/evaluate.py", line 36, in evaluate_all_tasks
    logits, *output_per_layers = self.model(tokens, position_ids, attention_mask, log_attention_weights=None)
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return _gather(input_)
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/SwissArmyTransformer/mpu/mappings.py", line 71, in _gather
    return _gather(input_)
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/SwissArmyTransformer/mpu/mappings.py", line 71, in _gather
    return _gather(input_)
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/SwissArmyTransformer/mpu/mappings.py", line 71, in _gather
    task.evaluate()
  File "/mnt/yrfs/xuyifan/GLM-130B/evaluation/tasks.py", line 86, in evaluate
    return forward_call(*input, **kwargs)
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/SwissArmyTransformer/model/transformer.py", line 582, in forward
    logits_parallel = gather_from_model_parallel_region(logits_parallel)
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/SwissArmyTransformer/mpu/mappings.py", line 141, in gather_from_model_parallel_region
    prediction.append(self.predict_single_batch(batch))
  File "/mnt/yrfs/xuyifan/GLM-130B/evaluation/tasks.py", line 206, in predict_single_batch
    torch.distributed.all_gather(tensor_list, input_, group=group)
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/torch/distributed/distributed_c10d.py", line 2070, in all_gather
    torch.distributed.all_gather(tensor_list, input_, group=group)
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/torch/distributed/distributed_c10d.py", line 2070, in all_gather
    return _GatherFromModelParallelRegion.apply(input_)
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/SwissArmyTransformer/mpu/mappings.py", line 120, in forward
    torch.distributed.all_gather(tensor_list, input_, group=group)
    return forward_call(*input, **kwargs)
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/torch/distributed/distributed_c10d.py", line 2070, in all_gather
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/SwissArmyTransformer/model/base_model.py", line 114, in forward
    logits_parallel = gather_from_model_parallel_region(logits_parallel)
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/SwissArmyTransformer/mpu/mappings.py", line 141, in gather_from_model_parallel_region
    log_probs = self.model.cond_log_prob(batch)
  File "/mnt/yrfs/xuyifan/GLM-130B/evaluation/model.py", line 33, in cond_log_prob
    return self.transformer(*args, **kwargs)
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return _GatherFromModelParallelRegion.apply(input_)
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/SwissArmyTransformer/mpu/mappings.py", line 120, in forward
    return _gather(input_)
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/SwissArmyTransformer/mpu/mappings.py", line 71, in _gather
    logits, *output_per_layers = self.model(tokens, position_ids, attention_mask, log_attention_weights=None)
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return _gather(input_)
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/SwissArmyTransformer/mpu/mappings.py", line 71, in _gather
    torch.distributed.all_gather(tensor_list, input_, group=group)
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/torch/distributed/distributed_c10d.py", line 2070, in all_gather
    return forward_call(*input, **kwargs)
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/SwissArmyTransformer/model/base_model.py", line 114, in forward
    return forward_call(*input, **kwargs)
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/SwissArmyTransformer/model/transformer.py", line 582, in forward
    return self.transformer(*args, **kwargs)
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    torch.distributed.all_gather(tensor_list, input_, group=group)
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/torch/distributed/distributed_c10d.py", line 2070, in all_gather
    work = group.allgather([tensor_list], [tensor])
RuntimeError:     CUDA out of memory. Tried to allocate 12.63 GiB (GPU 3; 79.17 GiB total capacity; 63.77 GiB already allocated; 11.35 GiB free; 65.52 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONFwork = group.allgather([tensor_list], [tensor])

    work = group.allgather([tensor_list], [tensor])
RuntimeError: CUDA out of memory. Tried to allocate 12.63 GiB (GPU 5; 79.17 GiB total capacity; 63.77 GiB already allocated; 11.69 GiB free; 65.17 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
RuntimeError: CUDA out of memory. Tried to allocate 12.63 GiB (GPU 6; 79.17 GiB total capacity; 63.77 GiB already allocated; 11.35 GiB free; 65.52 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
    logits_parallel = gather_from_model_parallel_region(logits_parallel)
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/SwissArmyTransformer/mpu/mappings.py", line 141, in gather_from_model_parallel_region
    return forward_call(*input, **kwargs)
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/SwissArmyTransformer/model/transformer.py", line 582, in forward
    work = group.allgather([tensor_list], [tensor])
RuntimeError: CUDA out of memory. Tried to allocate 12.63 GiB (GPU 7; 79.17 GiB total capacity; 63.77 GiB already allocated; 11.97 GiB free; 65.17 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
    work = group.allgather([tensor_list], [tensor])
    return _GatherFromModelParallelRegion.apply(input_)
RuntimeError  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/SwissArmyTransformer/mpu/mappings.py", line 120, in forward
: CUDA out of memory. Tried to allocate 12.63 GiB (GPU 4; 79.17 GiB total capacity; 63.77 GiB already allocated; 11.35 GiB free; 65.52 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
    logits_parallel = gather_from_model_parallel_region(logits_parallel)
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/SwissArmyTransformer/mpu/mappings.py", line 141, in gather_from_model_parallel_region
    return _GatherFromModelParallelRegion.apply(input_)
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/SwissArmyTransformer/mpu/mappings.py", line 120, in forward
    return _gather(input_)
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/SwissArmyTransformer/mpu/mappings.py", line 71, in _gather
    return _gather(input_)
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/SwissArmyTransformer/mpu/mappings.py", line 71, in _gather
    torch.distributed.all_gather(tensor_list, input_, group=group)
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/torch/distributed/distributed_c10d.py", line 2070, in all_gather
    torch.distributed.all_gather(tensor_list, input_, group=group)
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/torch/distributed/distributed_c10d.py", line 2070, in all_gather
    work = group.allgather([tensor_list], [tensor])
RuntimeError: CUDA out of memory. Tried to allocate 12.63 GiB (GPU 2; 79.17 GiB total capacity; 63.77 GiB already allocated; 11.69 GiB free; 65.17 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
    work = group.allgather([tensor_list], [tensor])
RuntimeError: CUDA out of memory. Tried to allocate 12.63 GiB (GPU 1; 79.17 GiB total capacity; 63.77 GiB already allocated; 11.69 GiB free; 65.17 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
Traceback (most recent call last):
  File "/mnt/yrfs/xuyifan/GLM-130B/evaluate.py", line 67, in <module>
    main()
  File "/mnt/yrfs/xuyifan/GLM-130B/evaluate.py", line 62, in main
    evaluate_all_tasks(args.data_path, model, tokenizer, args.task, task_classes)
  File "/mnt/yrfs/xuyifan/GLM-130B/evaluate.py", line 36, in evaluate_all_tasks
    task.evaluate()
  File "/mnt/yrfs/xuyifan/GLM-130B/evaluation/tasks.py", line 86, in evaluate
    prediction.append(self.predict_single_batch(batch))
  File "/mnt/yrfs/xuyifan/GLM-130B/evaluation/tasks.py", line 206, in predict_single_batch
    log_probs = self.model.cond_log_prob(batch)
  File "/mnt/yrfs/xuyifan/GLM-130B/evaluation/model.py", line 33, in cond_log_prob
    logits, *output_per_layers = self.model(tokens, position_ids, attention_mask, log_attention_weights=None)
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/SwissArmyTransformer/model/base_model.py", line 114, in forward
    return self.transformer(*args, **kwargs)
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/SwissArmyTransformer/model/transformer.py", line 582, in forward
    logits_parallel = gather_from_model_parallel_region(logits_parallel)
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/SwissArmyTransformer/mpu/mappings.py", line 141, in gather_from_model_parallel_region
    return _GatherFromModelParallelRegion.apply(input_)
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/SwissArmyTransformer/mpu/mappings.py", line 120, in forward
    return _gather(input_)
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/SwissArmyTransformer/mpu/mappings.py", line 71, in _gather
    torch.distributed.all_gather(tensor_list, input_, group=group)
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/torch/distributed/distributed_c10d.py", line 2070, in all_gather
    work = group.allgather([tensor_list], [tensor])
RuntimeError: CUDA out of memory. Tried to allocate 12.63 GiB (GPU 0; 79.17 GiB total capacity; 63.77 GiB already allocated; 11.97 GiB free; 65.17 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
WARNING:torch.distributed.elastic.multiprocessing.api:Sending process 369172 closing signal SIGTERM
WARNING:torch.distributed.elastic.multiprocessing.api:Sending process 369173 closing signal SIGTERM
WARNING:torch.distributed.elastic.multiprocessing.api:Sending process 369174 closing signal SIGTERM
WARNING:torch.distributed.elastic.multiprocessing.api:Sending process 369175 closing signal SIGTERM
WARNING:torch.distributed.elastic.multiprocessing.api:Sending process 369179 closing signal SIGTERM
WARNING:torch.distributed.elastic.multiprocessing.api:Sending process 369181 closing signal SIGTERM
ERROR:torch.distributed.elastic.multiprocessing.api:failed (exitcode: 1) local_rank: 4 (pid: 369177) of binary: /mnt/yrfs/qinkai/miniconda3/envs/largescale/bin/python
Traceback (most recent call last):
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/bin/torchrun", line 33, in <module>
    sys.exit(load_entry_point('torch==1.12.0', 'console_scripts', 'torchrun')())
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/torch/distributed/elastic/multiprocessing/errors/__init__.py", line 345, in wrapper
    return f(*args, **kwargs)
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/torch/distributed/run.py", line 761, in main
    run(args)
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/torch/distributed/run.py", line 752, in run
    elastic_launch(
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/torch/distributed/launcher/api.py", line 131, in __call__
    return launch_agent(self._config, self._entrypoint, list(args))
  File "/mnt/yrfs/qinkai/miniconda3/envs/largescale/lib/python3.9/site-packages/torch/distributed/launcher/api.py", line 245, in launch_agent
    raise ChildFailedError(
torch.distributed.elastic.multiprocessing.errors.ChildFailedError: 
============================================================
/mnt/yrfs/xuyifan/GLM-130B/evaluate.py FAILED
------------------------------------------------------------
Failures:
[1]:
  time      : 2022-09-23_00:32:47
  host      : node15
  rank      : 7 (local_rank: 7)
  exitcode  : 1 (pid: 369183)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
------------------------------------------------------------
Root Cause (first observed failure):
[0]:
  time      : 2022-09-23_00:32:47
  host      : node15
  rank      : 4 (local_rank: 4)
  exitcode  : 1 (pid: 369177)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
============================================================
